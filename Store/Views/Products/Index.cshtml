@model Store.ViewModels.ProductIndexViewModel
@using PagedList.Mvc

@{
    ViewBag.Title = "Products";
}

<h2>@ViewBag.Title</h2>
<p>
    @if (Session["Name"] == null)
    {
    }
    else
    {
        @Html.ActionLink("Create New", "Create")
    }

    <table class="table">
        <tr>
            <td>
                @using (Html.BeginForm("Index", "Products", FormMethod.Get))
                {
                    <div class="row">
                        <ul class="links">
                            <li>
                                <div>
                                    @Html.DropDownListFor(vm => vm.Category, Model.CatFilterItems, "Select Category", new { @class = "form-control" })
                                </div>
                            </li>
                            <li>
                                <div>@Html.DropDownListFor(vm => vm.SortBy, new SelectList(Model.Sorts, "Value", "Key"), "Sort By", new { @class = "form-control" })</div>
                            </li>
                            <li>
                                <div>
                                    <input type="submit" class="btn btn-default" value="Filter" />
                                    <input type="hidden" name="Search" id="Search" value="@ViewBag.Search" />
                                </div>
                            </li>

                        </ul>

                    </div>

                }
            </td>
            <td>
                @using (Html.BeginRouteForm("ProductsIndex", FormMethod.Get, new { @class = "navbar-form navbar-right" }))
                {
                    <div class="form-group">
                        @Html.TextBox("Search", null, new { @class = "form-control", @placeholder = "Search Products" })
                    </div>
                    <button type="submit" class="btn btn-default">Search</button>
                }
            </td>
        </tr>
    </table>

</p>
<p>
    <b>
    @(String.IsNullOrWhiteSpace(Model.Search) ? "Showing All " : "Your search for " + (Model.Search).ToUpper() + " found") @Model.Products.TotalItemCount products.
    </b>
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Category)
        </th>
        <th></th>
        <th>
            @Html.DisplayNameFor(model => model.Products.First().Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Products.First().Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Products.First().Price)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model.Products)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Category.Name)
            </td>
            <td style="text-align:center;">
                <a href="@Url.Action("Details", new {id = item.ID })">
                    <img src="@Url.Content(item.ImageURL)" style="width: 90px; height: 90px;" />
                </a>

                @*@using (Html.BeginForm("AddToBasket", "Basket"))
                    {
                       @Html.AntiForgeryToken()
                       @Html.HiddenFor(modelitem => item.ID)
                       @Html.DropDownList("quantity", Enumerable.Range(1, 10).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }))
                       <input type="submit" class="btn btn-primary btn-xs" value="Add to Basket">
                    }*@
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                <a href="@Url.Action("Details", new {id = item.ID })">
                    Buy Now
                </a>
            </td>
            <td>

                @if (Session["Name"] == null)
                {
                }
                else
                {
                     @Html.ActionLink("Edit", "Edit", new { id = item.ID })
                    @Html.Raw(" | ")
                    @Html.ActionLink("Details", "Details", new { id = item.ID })
                    @Html.Raw(" | ")
                    @Html.ActionLink("Delete", "Delete", new { id = item.ID })
                }

            </td>
        </tr>
    }

</table>
<div>
    Page @(Model.Products.PageCount < Model.Products.PageNumber ? 0 : Model.Products.PageNumber) of @Model.Products.PageCount
    @Html.PagedListPager(Model.Products, page => Url.Action("Index", new { category = @Model.Category, Search = @Model.Search, sortBy = @Model.SortBy, page }))
</div>
